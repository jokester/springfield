{"version":3,"sources":["lib/delegate.ts","lib/positional/positional-snapshots.ts","lib/positional/positional-transition.ts","lib/default-delegate.ts","lib/shared-elem.tsx","demo/shared-element-demo-lib.tsx","index.tsx"],"names":["TransitionPhase","SpringfieldContext","React","createPositionSnapshot","elem","timestamp","Date","now","getBoundingClientRect","left","right","top","bottom","width","height","findPositionalSnapshot","storage","logicalId","instanceId","inner","get","entries","pId","snapshot","centerOf","pos","x","y","computeInvertedPositionalTransition","last","first","centerFirst","centerLast","transform","join","globalSnapshotStorage","Map","defaultSpringfieldDelegate","takeSnapshot","innerMap","set","takePositionalSnapshot","removeSnapshot","delete","size","removePositionalSnapshot","createStyle","phase","transition","window","initialRender","opacity","beforeTransition","lastSnapshot","current","duringTransition","afterTransition","SharedElement","children","isTarget","ref","useRef","delegate","useContext","useState","undefined","extraStyle","setExtraStyle","useCallback","HTMLElement","useLayoutEffect","effecting","invertedTransform","requestAnimationFrame","addEventListener","tidyUp","removeEventListener","length","origElem","cloneElement","componentClasses","ShareElemLibPlayground","props","currentTab","setCurrentTab","className","title","onClick","style","_1","_2","console","log","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.20d2695b.chunk.js","sourcesContent":["/**\n * @file delegate.ts\n * extension point of this library\n * - what elements to apply transition\n * - what transition / transform to apply\n */\nimport * as React from 'react';\n\n/**\n * @see https://aerotwist.com/blog/flip-your-animations/ for explanations of \"first\" \"last\" \"inverted\"\n */\nexport enum TransitionPhase {\n  /**\n   * the styles to render a DOM element and measure its \"stable\" state\n   * e.g. {@code { opacity: 0 }}\n   * @note returning `undefined` would apply no transition.\n   * @note implementations should return undefined in SSR\n   */\n  initialRender = 0,\n\n  /**\n   * the styles to apply before transition starts\n   * e.g. \"inverted\" transform styles that transforms the position measured at `initialRender` to\n   * the last snapshot of the logical element (\"first\")\n   * @note returning `undefined` would apply no transition\n   */\n  beforeTransition = 1,\n\n  /**\n   * the styles that starts (and exists during) transition\n   * e.g. no transform (to undo transform done by `beforeTransition`) and CSS `transition` property.\n   */\n  duringTransition = 2,\n\n  /**\n   * the styles to apply after transition ends\n   * e.g. empty (so that the element gets rendered normally)\n   */\n  afterTransition = 3,\n}\n\nexport interface SpringfieldDelegate {\n  takeSnapshot(logicalId: string, instanceId: string, elem: HTMLElement): void;\n  removeSnapshot(logicalId: string, instanceId: string): void;\n\n  /**\n   *\n   * @param phase\n   * @param logicalId\n   * @param instanceId\n   * @param elem\n   * @param transition property specified in {@ref SharedElement}\n   * @return inline styles to render DOM element with\n   */\n  createStyle(\n    phase: TransitionPhase,\n    logicalId: string,\n    instanceId: string,\n    elem: undefined | HTMLElement,\n    transition?: string,\n  ): undefined | /* React.CSSProperties */ {};\n}\n\nexport const SpringfieldContext = React.createContext<null | SpringfieldDelegate>(null);\n","export type PositionSnapshot = (ClientRect | DOMRect) & {\n  timestamp: number;\n};\n\nexport function createPositionSnapshot(elem: HTMLElement): PositionSnapshot {\n  const timestamp = Date.now();\n  const { left, right, top, bottom } = elem.getBoundingClientRect();\n  return {\n    timestamp,\n    left,\n    right,\n    top,\n    bottom,\n    width: right - left,\n    height: bottom - top,\n  };\n}\n\nexport declare type PositionalSnapshotStorage = Map<\n  /* logicalId */ string,\n  Map</* instanceId */ string, PositionSnapshot>\n>;\n\nexport function takePositionalSnapshot(\n  storage: PositionalSnapshotStorage,\n  logicalId: string,\n  instanceId: string,\n  elem: HTMLElement,\n): void {\n  const x = createPositionSnapshot(elem);\n  if (!(x.width && x.height)) return;\n\n  const innerMap = storage.get(logicalId);\n  if (innerMap) {\n    innerMap.set(instanceId, x);\n  } else {\n    storage.set(logicalId, new Map([[instanceId, x]]));\n  }\n}\n\nexport function findPositionalSnapshot(\n  storage: PositionalSnapshotStorage,\n  logicalId: string,\n  instanceId: string,\n): null | PositionSnapshot {\n  let inner;\n  if ((inner = storage.get(logicalId))) {\n    for (const [pId, snapshot] of inner.entries()) {\n      if (pId !== instanceId && snapshot) return snapshot;\n    }\n  }\n  return null;\n}\n\nexport function removePositionalSnapshot(\n  storage: PositionalSnapshotStorage,\n  logicalId: string,\n  instanceId: string,\n): void {\n  let inner;\n  if ((inner = storage.get(logicalId))) {\n    inner.delete(instanceId);\n    if (!inner.size) {\n      storage.delete(logicalId);\n    }\n  }\n}\n","import { PositionSnapshot } from './positional-snapshots';\n\nfunction centerOf(pos: PositionSnapshot) {\n  return { x: pos.left + pos.width / 2, y: pos.top + pos.height / 2 };\n}\n\n/**\n * @param last\n * @param first\n * @returns inline styles that make 'last' appear at position of 'first'\n */\nexport function computeInvertedPositionalTransition(\n  last: PositionSnapshot,\n  first: PositionSnapshot,\n): /* React.CSSProperties */ {} {\n  const centerFirst = centerOf(first);\n  const centerLast = centerOf(last);\n\n  return {\n    transform: [\n      `translateX(${centerFirst.x - centerLast.x}px)`,\n      `translateY(${centerFirst.y - centerLast.y}px)`,\n      `scaleX(${first.width / last.width})`,\n      `scaleY(${first.height / last.height})`,\n    ].join(' '),\n  };\n}\n","import {\n  createPositionSnapshot,\n  findPositionalSnapshot,\n  PositionalSnapshotStorage,\n  removePositionalSnapshot,\n  takePositionalSnapshot,\n} from './positional/positional-snapshots';\nimport { SpringfieldDelegate, TransitionPhase } from './delegate';\nimport { computeInvertedPositionalTransition } from './positional/positional-transition';\n\nconst globalSnapshotStorage: PositionalSnapshotStorage = new Map();\n\n/**\n * A global singleton\n */\nexport const defaultSpringfieldDelegate: SpringfieldDelegate = {\n  takeSnapshot(logicalId: string, instanceId: string, elem: HTMLElement) {\n    return takePositionalSnapshot(globalSnapshotStorage, logicalId, instanceId, elem);\n  },\n\n  removeSnapshot(logicalId: string, instanceId: string): void {\n    return removePositionalSnapshot(globalSnapshotStorage, logicalId, instanceId);\n  },\n\n  createStyle(\n    phase: TransitionPhase,\n    logicalId: string,\n    instanceId: string,\n    elem: undefined | HTMLElement,\n    transition = 'all 0.3s ease-in',\n  ): undefined | {} {\n    if (/* SSR */ typeof window === 'undefined') {\n      return undefined;\n    } else if (phase === TransitionPhase.initialRender) {\n      return { opacity: 0 };\n    } else if (phase === TransitionPhase.beforeTransition && elem) {\n      const lastSnapshot = findPositionalSnapshot(globalSnapshotStorage, logicalId, instanceId);\n      if (lastSnapshot) {\n        const current = createPositionSnapshot(elem);\n        return computeInvertedPositionalTransition(current, lastSnapshot);\n      }\n    } else if (phase === TransitionPhase.duringTransition) {\n      return { transition };\n    } else if (phase === TransitionPhase.afterTransition) {\n      return undefined;\n    }\n    return undefined;\n  },\n};\n","import React, { cloneElement, useCallback, useContext, useLayoutEffect, useRef, useState } from 'react';\nimport { SpringfieldContext, TransitionPhase } from './delegate';\nimport { defaultSpringfieldDelegate } from './default-delegate';\n\ninterface SharedElemProps {\n  /**\n   * @param extraStyle\n   * inline styles to render a DOM element with. Typically contains opacity / transform / transition\n   *\n   * @param takeSnapshot\n   * a callback to take snapshot manually. e.g. in scroll/click event handler\n   *\n   * @param removeSnapshot\n   * a callback to remove snapshot manually. e.g. when the element is no longer appropriate a transition source\n   *\n   * @param ref If the desired shared element is not return value of children, manually pass to desired element.\n   */\n  children(\n    extraStyle: undefined | React.CSSProperties,\n    takeSnapshot: () => void,\n    removeSnapshot: () => void,\n    ref?: React.MutableRefObject<any>,\n  ): React.ReactElement;\n\n  /**\n   * identifier of a logical element\n   * @example \"user-avatar\"\n   */\n  logicalId: string;\n\n  /**\n   * identifier of a occurrence of a \"logical element\"\n   * @example \"in-toolbar\" \"in-profile-component\"\n   */\n  instanceId: string;\n\n  /**\n   * transition spec when corresponded DOM element is mounted\n   * @default '0.3s all ease-in'\n   * @see https://developer.mozilla.org/en-US/docs/Web/CSS/transition\n   */\n  transition?: string;\n\n  /**\n   * apply transition after children is rendered\n   * @default false\n   * (all SharedElement-rendered children are source of transitions)\n   */\n  isTarget?: boolean;\n}\n\nexport const SharedElement: React.FC<SharedElemProps> = ({ children, instanceId, isTarget, logicalId, transition }) => {\n  const ref = useRef<HTMLElement>(null!);\n  const delegate = useContext(SpringfieldContext) || defaultSpringfieldDelegate;\n\n  const [extraStyle, setExtraStyle] = useState<undefined | React.CSSProperties>(() =>\n    isTarget\n      ? delegate.createStyle(TransitionPhase.initialRender, logicalId, instanceId, undefined, transition)\n      : undefined,\n  );\n\n  const takeSnapshot = useCallback(() => {\n    if (ref.current instanceof HTMLElement && logicalId && instanceId)\n      delegate.takeSnapshot(logicalId, instanceId, ref.current);\n  }, [logicalId, instanceId, delegate]);\n\n  const removeSnapshot = useCallback(() => {\n    if (logicalId && instanceId) delegate.removeSnapshot(logicalId, instanceId);\n  }, [instanceId, logicalId, delegate]);\n\n  useLayoutEffect(() => {\n    const elem = ref.current;\n    if (!(elem instanceof HTMLElement)) return;\n\n    takeSnapshot();\n\n    let effecting = true;\n\n    if (isTarget && logicalId && instanceId && extraStyle /* the value for initialRender */) {\n      const invertedTransform = delegate.createStyle(\n        TransitionPhase.beforeTransition,\n        logicalId,\n        instanceId,\n        ref.current,\n        transition,\n      );\n\n      setExtraStyle(invertedTransform || undefined);\n      // do not start transition if invertedTransform is falsy (and we just unset the styles)\n      if (!invertedTransform) return;\n\n      /**\n       * requestAnimationFrame does not really ensure `invertedTransform` style is set to DOM\n       * If this becomes a problem, consider https://www.robinwieruch.de/react-usestate-callback\n       */\n      requestAnimationFrame(() => {\n        if (!(effecting && ref.current === elem)) return;\n\n        // force invertedTransform to be layouted\n        elem.getBoundingClientRect();\n\n        setExtraStyle(delegate.createStyle(TransitionPhase.duringTransition, logicalId, instanceId, elem, transition));\n\n        const tidyUp = () => {\n          elem.removeEventListener('transitionend', tidyUp);\n          if (!(effecting && ref.current === elem)) return;\n\n          setExtraStyle(delegate.createStyle(TransitionPhase.afterTransition, logicalId, instanceId, elem, transition));\n        };\n        elem.addEventListener('transitionend', tidyUp);\n      });\n    }\n\n    return () => {\n      effecting = false;\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isTarget, logicalId, instanceId, transition, takeSnapshot, delegate /* NO extraStyle */]);\n\n  if (typeof children !== 'function') {\n    /**\n     * when api mismatch: silently do nothing\n     */\n    return children as React.ReactElement;\n  } else if (children.length > 3) {\n    /**\n     * when children (a function) makes use of ref: do not inject own\n     */\n    return children(extraStyle, takeSnapshot, removeSnapshot, ref) as React.ReactElement;\n  } else {\n    /**\n     * assume it renders to a DOM element, and inject our ref\n     */\n    const origElem = children(extraStyle, takeSnapshot, removeSnapshot);\n    return cloneElement(origElem, { ref }) as React.ReactElement;\n  }\n};\n","import React, { useState } from 'react';\nimport { SharedElement } from '../lib/shared-elem';\n\nconst componentClasses = {\n  button: `p-2 inline-block border border-solid shadow-outline focus:outline-0`,\n  verticalContainer: `flex p-4 justify-around`,\n  tabHeader: `flex items-center justify-end p-4 `,\n  userIcon: `flex-none inline-block w-24 h-24 border-solid border bg-gray-200`,\n  tabContent: `h-64`,\n  mainContent: 'h-64 bg-gray-100',\n  userAvatar: 'w-40 h-40 border-solid border inline-block bg-gray-200 mx-4',\n} as const;\n\nexport const ShareElemLibPlayground: React.FC = props => {\n  const [currentTab, setCurrentTab] = useState<1 | 2 | 3>(1);\n  return (\n    <div>\n      <p className={componentClasses.verticalContainer}>\n        <button title=\"tab1\" className={componentClasses.button} onClick={() => setCurrentTab(1)}>\n          tab1\n        </button>\n        <button title=\"tab2\" className={componentClasses.button} onClick={() => setCurrentTab(2)}>\n          tab2\n        </button>\n      </p>\n\n      {currentTab === 1 && (\n        <div>\n          <div className={componentClasses.tabContent}>\n            <SharedElement logicalId=\"user\" instanceId=\"tab\" isTarget transition=\"all 2s linear\">\n              {(style, _1, _2, ref) => {\n                console.log('user/tab', style);\n                return <div className={componentClasses.userIcon} ref={ref} style={style} />;\n              }}\n            </SharedElement>\n          </div>\n          <div className={componentClasses.mainContent}>\n            <p>page1</p>\n          </div>\n        </div>\n      )}\n      {currentTab === 2 && (\n        <div>\n          <div className={componentClasses.tabContent}>{/*<div className={componentClasses.userIcon} />*/}</div>\n          <div className={componentClasses.mainContent}>\n            <p>page2</p>\n            <SharedElement logicalId=\"user\" instanceId=\"main\" isTarget>\n              {(style, takeSnapshot) => {\n                console.log('user/main', style);\n                return (\n                  <div\n                    className={componentClasses.userAvatar}\n                    style={style}\n                    onClick={() => {\n                      takeSnapshot();\n                      setCurrentTab(1);\n                    }}\n                  />\n                );\n              }}\n            </SharedElement>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { ShareElemLibPlayground } from './demo/shared-element-demo-lib';\n\nfunction registerHMR() {\n  type ModuleHMR = typeof module & {\n    hot?: {\n      accept(dependencies: string | string[], callback: (updatedDependencies: any[]) => void): void;\n      accept(callback: (updatedDependencies: any[]) => void): void;\n    };\n  };\n\n  if ((module as ModuleHMR).hot) {\n    (module as ModuleHMR).hot!.accept(render);\n  }\n}\n\nfunction render() {\n  ReactDOM.render(\n    <>\n      <ShareElemLibPlayground />\n    </>,\n    document.getElementById('root') as HTMLElement,\n  );\n}\n\nregisterHMR();\nrender();\n"],"sourceRoot":""}